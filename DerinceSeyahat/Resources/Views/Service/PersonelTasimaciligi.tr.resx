<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Context1" xml:space="preserve">
    <value>Personel taşımacılığını; bilgi, tecrübe ve ilkeli hizmet anlayışıyla sürdüren markamız, hizmet sunduğu firmaların personellerini konforlu ve güvenli olarak, talep edilen lokasyona ulaştırmayı hedef edinmiştir. Deneyimli, güler yüzlü, uzman, kaliteli personel taşımacılığı personelimizle istenilen zamanda, dakik hizmet sunuyoruz.</value>
  </data>
  <data name="Context2" xml:space="preserve">
    <value>Personel taşımacılığı çalışanlarımız, kurumsal kimliğimize ve markamıza ait özel işaretler taşıyan, standart tip giyimleri ile farklılığımızı ifade ediyor. Personel taşımacılığı yapan tüm sürücülerimiz için gerekli olan tüm belge ve raporları güncel olarak takip ederek, sürekli kontroller ile kurumsal kaynak planlama yazılımı gibi dijital platformlarda arşivliyoruz. Personel taşımacılığı sürücülerimizin gerekli belge ve sertifikasyonlarını sağlamakla birlikte, "Psikoteknik Yeterlilik" belgesi ve "Güvenli Sürüş Teknikleri" eğitimleri almasını sağlıyoruz. Belge ve raporların takibinin yanı sıra denetim birimimizle düzenlediğimiz denetimlerle araçlarda bulunması zorunlu olan ekipmanların kontrolünü sağlıyor, kuralların uygulandığından emin oluyoruz. Tablet bilgisayarlarla gerçekleştirilen bu denetimlerin sonuçlarını anlık olarak hem operasyon sorumlularımızla, hem de firma yetkileriyle paylaşarak süreci şeffaf bir şekilde yönetiyoruz. İstanbul gibi büyük metropollerde yaşanılan en büyük sorunlardan birisi olan zaman ile ilgili problemleri minumuma indirgeyerek; profesyonel kadromuz, A+ donanıma sahip araçlarımızla, ilkelerimizden taviz vermeden, kusursuz hizmet anlayışıyla çalışıyoruz.</value>
  </data>
  <data name="Context3" xml:space="preserve">
    <value>Personel taşımacılığı için ihtiyaçlarınıza özel çözümler sunmak üzere; istenilen marka ve modelde, geniş araç filosu ile faaliyet gösteriyoruz. Derince Seyahat ailesi olarak üst yönetim, yönetici, proje ekibi ve sürücü kadrosu ile birlikte, müşterilerimizin gitmek istedikleri lokasyona huzur ve güvenle ulaşması için sonsuz müşteri memnuniyeti prensibi ile hizmet sunuyoruz..</value>
  </data>
  <data name="Context4" xml:space="preserve">
    <value>Derince Seyahat, personel taşımacılığı sektöründe aranılan, güvenilir, önder ve hizmet kalitesinde liderdir. Müşteri memnuniyetinin bilincinde bir firma olmayı esas alır ve kalite yönetim sistemi performansını gözden geçirerek, etkinliğini sürekli iyileştirmeyi amaçlar.</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Personel Taşımacılığı</value>
  </data>
</root>